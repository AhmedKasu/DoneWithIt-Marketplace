name: Deployment pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  build_and_test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.1.0

      - name: Install dependencies
        run: npm run install-all

      - name: Check style
        run: npm run lint

      - name: Create production builds
        run: npm run build

      - name: Run unit tests
        run: npm test

  e2e_test:
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    needs: [build_and_test]
    runs-on: ubuntu-20.04
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      VITE_CLOUDINARY_UPLOAD_URL: ${{ secrets.VITE_CLOUDINARY_UPLOAD_URL }}
      VITE_CLOUDINARY_UPLOAD_PRESET: ${{ secrets.VITE_CLOUDINARY_UPLOAD_PRESET }}
      TEST_POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start test database
        run: docker-compose -f server/docker-compose.test-db.yml up -d

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.1.0

      - name: Install dependencies
        run: npm run install-all

      - name: Wait for test database to start
        run: |
          attempts=0
          until PGPASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }} psql -h "localhost" -U "test_user" -d "test_marketplace" -c '\q' || [ $attempts -eq 60 ]; do
            attempts=$((attempts+1))
            echo "Postgres is still unavailable - sleeping"
            sleep 1
          done

          if [ $attempts -eq 60 ]; then
            echo "Failed to connect to Postgres after 60 attempts, exiting"
            exit 1
          fi

          echo "Postgres is up and running"

      - name: Start test app
        run: npm run start:test &

      - name: Run test-migrations
        run: |
          sleep 10 
          npm run test-migration:up

      - name: Run test-seed
        run: npm run test-seed:up

      - name: Run e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e

      - name: Stop and remove test database container
        run: docker-compose -f server/docker-compose.test-db.yml down

  deployment_pipeline:
    needs: [e2e_test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_APP_EMAIL}}
          procfile: 'web: npm start'
          healthcheck: 'https://donewithit-marketplace-6ab68864c928.herokuapp.com/health'
          checkstring: 'ok'
          delay: 5
          rollbackonhealthcheckfailed: true

  tag_release:
    needs: [deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.55.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
